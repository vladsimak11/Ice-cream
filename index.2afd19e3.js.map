{"mappings":"AAAC,IAASA,EAAG,mBAAHA,EAA6XC,OAAOC,QAAQC,WAApXC,UAAUJ,EAAEI,QAAQJ,EAAEK,mBAAmBL,EAAEM,oBAAoBN,EAAEO,uBAAuB,SAASC,GAAG,IAAI,IAAIC,EAAEC,KAAKC,GAAGF,EAAEG,UAAUH,EAAEI,eAAeC,iBAAiBN,GAAGO,EAAE,EAAEJ,EAAEI,IAAIJ,EAAEI,KAAKN,KAAKM,EAAE,OAAOC,QAAQL,EAAEI,G,GAAM,mBAAmBf,EAAEiB,UAAUjB,EAAEiB,QAAQ,SAAST,GAAG,IAAI,IAAIC,EAAEC,KAAKD,GAAG,IAAIA,EAAES,UAAU,CAAC,GAAGT,EAAEL,QAAQI,GAAG,OAAOC,EAAEA,EAAEA,EAAEU,U,CAAW,OAAO,I,GAG/XP,SAASQ,iBAAiB,oBAAoB,W,kDAI3BC,EAAWT,SAACU,cAAiB,qBAClCC,EAAiBX,SAAaE,iBAAC,mBAK1CU,EAAAC,SACgB,SAAHC,GAEVA,EAAAN,iBACK,kBAAiBZ,G,yDASDI,SAACU,cAAa,sBAChBK,EAAS,MAGzBC,UAAAC,IAAA,UAEAR,EAAQO,UAAUC,IAAI,S,OAM5BN,EAAaE,SAAQ,SAASC,GAE3BA,EAAKN,iBAAiB,SAAS,SAASZ,GACnBE,KAAKO,QAAQ,UAEnBW,UAAUE,OAAO,UAC7BT,EAAQO,UAAUE,OAAO,S,OAM9BlB,SAASmB,KAAKX,iBAAiB,SAAS,SAAUZ,GAGnC,IAFDA,EAAEwB,UAIRpB,SAASU,cAAc,iBAAiBM,UAAUE,OAAO,UACzDlB,SAASU,cAAc,YAAYM,UAAUE,OAAO,U,IAEzD,GAGHT,EAAQD,iBAAiB,SAAS,WAC9BR,SAASU,cAAc,iBAAiBM,UAAUE,OAAO,UACzDpB,KAAKkB,UAAUE,OAAO,S,OC/D7B,MACC,MACMG,EAAkB,sBAElBC,EAActB,SAASU,cAAc,oBACrCa,EAAevB,SAASU,cAAc,qBACtCc,EAAaxB,SAASU,cAAc,sBACpCe,EAAgBzB,SAASU,cAAc,mBAE7CY,EAAYd,iBAAiB,QAASkB,GACtCH,EAAaf,iBAAiB,QAASkB,GASvC,SAASA,IACP,MAAMC,GAAaH,EAAWR,UAAUY,OAAOP,GAC/CC,EAAYO,aAAa,gBAAiBF,GAC1CG,aAAaH,E,CARGI,MAAMC,KAAKP,EAAcQ,UACjCpB,SAAQqB,IAChBA,EAAS1B,iBAAiB,QAASkB,EAAW,IAShDrC,OAAO8C,WAAW,uBAAuB3B,iBAAiB,UAAUZ,IAE9DA,EAAEJ,UAAYgC,EAAWR,UAAUoB,SAASf,KAC9CG,EAAWR,UAAUC,IAAII,GACzBC,EAAYO,aAAa,iBAAiB,GAC1CC,aA7Ba,O,GAgClB,EAjCA,GCADzC,OAAOgD,SAAW,IAElB,WACE,MAAMC,EAAStC,SAASU,cAAc,WAChC6B,EAAsBD,EAAOE,aAChBnD,OAAOoD,YAETF,EACfD,EAAOtB,UAAUE,OAAO,wBAExBoB,EAAOtB,UAAUC,IAAI,uB,CAVDyB","sources":["src/js/modal.js","src/js/mobile-menu.js","src/js/header-scroll.js"],"sourcesContent":["!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записуємо змінні в перемінні масиву елементів-кнопок та підложку.\n      Підложці даємо ID, щоб не впливати на інші елементи з класом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n  \n\n   /* перебираємо масив */\n   modalButtons.forEach(function(item){\n\n      /* ставимо слухач click */\n      item.addEventListener('click', function(e) {\n\n         /* Уникаємо стандартизованих дій елементу. Так як кнопку\n            люди можуть зробити по різному. Чи це посилання, чи кнопка.\n            Перестраховуємось. */\n         e.preventDefault();\n\n         /* При кліці на кнопку ми будемо забирати вміст атрибуту data-modal\n            і будемо шукати модальне вікно з таким атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* Після того як знайшли потрібне вікно, додаємо клас підложці та вікну, щоб їх показати. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready","(() => {\n  const scrollOn = false;\n  const classMenuHidden = 'mobile-menu--hidden';\n\n  const btnMenuOpen = document.querySelector('[data-menu-open]');\n  const btnMenuClose = document.querySelector('[data-menu-close]');\n  const menuMobile = document.querySelector('[data-mobile-menu]');\n  const menuMobileNav = document.querySelector('[data-menu-nav]');\n\n  btnMenuOpen.addEventListener('click', toggleMenu);\n  btnMenuClose.addEventListener('click', toggleMenu);\n\n\n\n  const menuItems = Array.from(menuMobileNav.children);\n  menuItems.forEach(menuItem => {\n    menuItem.addEventListener('click', toggleMenu);\n  });\n\n  function toggleMenu() {\n    const isOpenned = !menuMobile.classList.toggle(classMenuHidden);\n    btnMenuOpen.setAttribute('aria-expanded', isOpenned);\n    toggleScroll(isOpenned);\n  }\n\n  window.matchMedia(`(min-width: 1200px)`).addEventListener('change', e => {\n  \n    if (e.matches && !menuMobile.classList.contains(classMenuHidden)) {\n      menuMobile.classList.add(classMenuHidden);\n      btnMenuOpen.setAttribute('aria-expanded', false);\n      toggleScroll(scrollOn);\n    }\n  });\n})();\n","window.onscroll = () => changeHeaderBackground();\n\nfunction changeHeaderBackground() {\n  const header = document.querySelector('.header');\n  const headerOffsetTrigger = header.offsetHeight;\n  const pageOffset = window.pageYOffset;\n\n  if (pageOffset > headerOffsetTrigger) {\n    header.classList.remove('header--transparency');\n  } else {\n    header.classList.add('header--transparency');\n  }\n}"],"names":["e1","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","document","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","addEventListener","overlay","querySelector","closeButtons","modalButtons","forEach","item","modalId","classList","add","remove","body","keyCode","classMenuHidden","btnMenuOpen","btnMenuClose","menuMobile","menuMobileNav","toggleMenu","isOpenned","toggle","setAttribute","toggleScroll","Array","from","children","menuItem","matchMedia","contains","onscroll","header","headerOffsetTrigger","offsetHeight","pageYOffset","$c8ef77e7f7ecd6cb$var$changeHeaderBackground"],"version":3,"file":"index.2afd19e3.js.map"}